<?php

namespace App\Repositories;

use App\Http\Resources\LiveMatchResource;
use App\Models\Livematch;
use Illuminate\Support\Carbon;
use Illuminate\Support\Str;

class LiveMatchRepository extends Repository implements ILiveMatchRrepository
{
    public function __construct(Livematch $livematch)
    {
        parent::__construct($livematch);
    }

    public function all($orderBy = ['created_at' => 'desc'])
    {
        return parent::all($orderBy);
    }

    public function find($id)
    {
        $liveMatch=parent::find($id);
        if ($liveMatch && isset($liveMatch->player)){
            $liveMatch->player=json_decode($liveMatch->player);
        }
        return $liveMatch;
    }

    public function create(array $data)
    {

        $data['player']=json_encode($data['player']);
        return parent::create($data); // TODO: Change the autogenerated stub
    }

    public function update($id, array $data)
    {
        $liveMatch=parent::find($id);
        $data['matchsheet_id']= $data["matchsheet_id"] ?? $liveMatch->matchsheet_id;
        $data['team_id']= $data["team_id"] ?? $liveMatch->team_id;
        $data['type']= $data["type"] ?? $liveMatch->type;
        $data['description']= $data["description"] ?? $liveMatch->description;
        $data['event_minute']= $data["event_minute"] ?? $liveMatch->event_minute;
        $data['status']= $data["status"] ?? $liveMatch->status;
        $data['player']=isset($data['player'])? json_encode($data['player']):$liveMatch->player;
        return parent::update($id, $data); // TODO: Change the autogenerated stub
    }

    public function delete($id)
    {
        return parent::delete($id); // TODO: Change the autogenerated stub
    }
    function getLiveMatch($match_id)
    {
        return Livematch::where('matchsheet_id',$match_id)
            ->where('status', 'confirmed')
            ->orderBy('created_at')
            ->get();
        // TODO: Implement getLiveMatch() method.
    }
}
