<?php

namespace App\Repositories;

use App\Http\Resources\MatchSheetResource;
use App\Models\Matchsheet;
use App\Models\Team;
use Illuminate\Support\Carbon;

class MatchSheetRepository extends Repository implements IMatchSheetRepository
{

    public function __construct(Matchsheet $matchsheet)
    {
        parent::__construct($matchsheet);
    }

    public function all($orderBy = ['created_at' => 'desc'])
    {
        return parent::all($orderBy); // TODO: Change the autogenerated stub
    }

    public function find($id)
    {
        $matchSheet=parent::find($id);
        if ($matchSheet && isset($matchSheet->team_a_data)) {
            // Decode the JSON string in team_a_data into a PHP object or associative array
            $matchSheet->team_a_data = json_decode($matchSheet->team_a_data);
            $matchSheet->team_b_data = json_decode($matchSheet->team_b_data);

            // If you want an associative array instead of an object, use:
            // $matchSheet->team_a_data = json_decode($matchSheet->team_a_data, true);
        }
        return $matchSheet;
        //return new MatchSheetResource($matchSheet);
    }

    public function create(array $data)
    {
        //dd($data["teamA"]);
        $data["coach_a"]=$data["teamA"]["coach_a"];
        $data["team_a_id"]=$data["teamA"]["team_a_id"];
        $data["color_a"]=$data["teamA"]["color_a"];
        $data["formation_a"]=$data["teamA"]["formation_a"];

        $data["coach_b"]=$data["teamB"]["coach_b"];
        $data["team_b_id"]=$data["teamB"]["team_b_id"];
        $data["color_b"]=$data["teamB"]["color_b"];
        $data["formation_b"]=$data["teamB"]["formation_b"];

        $data["match_date"]=Carbon::parse($data["match_date"])->format('Y-m-d H:i:s');

        $data['team_a_data']=json_encode($data['teamA']);
        $data['team_b_data']=json_encode($data['teamB']);
        //dd($data['team_b_data']);
        //$data['coaching_staff']=json_encode($data['coaching_staff']);
        return parent::create($data); // TODO: Change the autogenerated stub
    }

    public function update($id, array $data)
    {
        $currentMatchSheet=parent::find($id);
        $data['team_a_id']= $data["teamA"]["team_a_id"] ?? $currentMatchSheet->team_a_id;
        $data['team_b_id']= $data["teamB"]["team_b_id"] ?? $currentMatchSheet->team_b_id;
        $data['color_a']= $data["teamA"]["color_a"] ?? $currentMatchSheet->color_a;
        $data['color_b']= $data["teamB"]["color_b"] ?? $currentMatchSheet->color_b;
        $data["formation_a"]=$data["teamA"]["formation_a"]?? $currentMatchSheet->formation_a;
        $data["formation_b"]=$data["teamB"]["formation_b"] ?? $currentMatchSheet->formation_b;
        $data['match_date']= Carbon::parse($data["match_date"])->format('Y-m-d H:i:s') ?? $currentMatchSheet->match_date;
        $data['location']= $data['location'] ?? $currentMatchSheet->location;
        $data['referee']= $data['referee'] ?? $currentMatchSheet->referee;

        $data['team_a_data']=isset($data['teamA'])?
            json_encode($data['teamA']):$currentMatchSheet->team_a_data;
        $data['team_b_data']=isset($data['teamB'])?
            json_encode($data['teamB']):$currentMatchSheet->team_b_data;
        //$data['coaching_staff']=isset($data['coaching_staff'])?
        //    json_encode($data['coaching_staff']):$currentMatchSheet->coaching_staff;
        return parent::update($id, $data); // TODO: Change the autogenerated stub
    }

    public function delete($id)
    {
        return parent::delete($id); // TODO: Change the autogenerated stub
    }
    public function getLast(){
        return  new MatchSheetResource(Matchsheet::last()) ;
    }

    public function getTeams(){
        return Team::orderBy('name','asc')->get();
    }

}
